Python 

- Use Lasso to do the final inference CI

{'v1':             estimate    SE est    CI low     CI up   adj p-value
 rawCount18  0.021005  0.003867  0.015715  0.030872  5.003292e-06
 rawCount36  0.027036  0.003060  0.020160  0.032155  0.000000e+00
 rawCount41  0.026683  0.003980  0.020072  0.035672  2.716100e-09}

 -Use ElasticNet to do the final inference CI
 
{'v1':             estimate    SE est    CI low     CI up   adj p-value
 rawCount18  0.020164  0.003546  0.014675  0.028576  1.168490e-06
 rawCount36  0.026197  0.003020  0.018994  0.030831  0.000000e+00
 rawCount41  0.027286  0.003700  0.021752  0.036254  2.207992e-11}

- Use lm to do the final inference CI

{'v1':             estimate    SE est    CI low     CI up  adj p-value
 rawCount18  0.022237  0.005107  0.012226  0.032247     0.001201
 rawCount36  0.028435  0.005403  0.017845  0.039025     0.000029
 rawCount41  0.025984  0.005012  0.016160  0.035808     0.000029}
 
R-1.0.6

- Use HDCI to do the final inference CI
$v1
             estimate      SE est     CI low      CI up  adj p-value
rawCount18 0.02223196 0.004922494 0.01149721 0.03079303 5.650064e-04
rawCount36 0.02844261 0.004756176 0.01824073 0.03688460 6.007874e-07
rawCount41 0.02598555 0.004689058 0.01566846 0.03404923 4.035224e-06


- Use lm to do the final inference

$v1
             estimate      SE est     CI low      CI up  adj p-value
rawCount18 0.02223674 0.005107266 0.01222649 0.03224698 1.201099e-03
rawCount36 0.02843518 0.005403042 0.01784522 0.03902514 2.926016e-05
rawCount41 0.02598367 0.005012267 0.01615963 0.03580772 2.926016e-05


Python

- Use Ridge
{'v1':             estimate    SE est    CI low     CI up   adj p-value
 rawCount1  -0.012618  0.003212 -0.019596 -0.007005  9.998327e-04
 rawCount2  -0.008112  0.002070 -0.012572 -0.004457  9.998327e-04
 rawCount3  -0.014431  0.002940 -0.020480 -0.008956  2.247566e-05
 rawCount5   0.006175  0.001752  0.003192  0.010061  4.242974e-03
 rawCount6   0.013530  0.002130  0.009636  0.017985  1.426559e-08
 rawCount7  -0.014910  0.003515 -0.021915 -0.008135  3.347280e-04
 rawCount10 -0.018774  0.002832 -0.023731 -0.012630  4.549661e-09
 rawCount12  0.008121  0.003005  0.001892  0.013670  5.295352e-02
 rawCount14 -0.015736  0.003248 -0.022851 -0.010120  2.841417e-05
 rawCount15 -0.012796  0.002344 -0.017575 -0.008387  1.433112e-06
 rawCount16 -0.015752  0.002813 -0.020731 -0.009703  9.678414e-07
 rawCount17  0.015882  0.002465  0.010627  0.020288  1.045974e-08
 rawCount18  0.007864  0.002176  0.003527  0.012055  3.241420e-03
 rawCount19 -0.012270  0.002894 -0.017681 -0.006338  3.347280e-04
 rawCount20 -0.011477  0.003977 -0.017925 -0.002334  3.213001e-02
 rawCount21 -0.005556  0.002232 -0.009883 -0.001133  9.089938e-02
 rawCount24 -0.019435  0.004578 -0.027048 -0.009102  3.347280e-04
 rawCount26 -0.019393  0.004547 -0.028265 -0.010441  3.347280e-04
 rawCount27  0.006838  0.002389  0.002819  0.012185  3.336672e-02
 rawCount28  0.011707  0.002957  0.006747  0.018336  9.197315e-04
 rawCount33  0.013587  0.005119  0.006171  0.026238  5.952017e-02
 rawCount35 -0.014473  0.004272 -0.022989 -0.006244  6.775641e-03
 rawCount36  0.014525  0.002728  0.007588  0.018283  2.738645e-06
 rawCount37  0.013846  0.003293  0.008414  0.021324  3.525063e-04
 rawCount40 -0.012003  0.003900 -0.019206 -0.003918  1.938641e-02
 rawCount41  0.038220  0.002724  0.032939  0.043617  0.000000e+00
 rawCount42 -0.014499  0.003035 -0.020433 -0.008536  3.689061e-05
 rawCount44  0.011926  0.002821  0.006804  0.017863  3.353709e-04
 rawCount45 -0.008514  0.003233 -0.014669 -0.001997  6.154900e-02
 rawCount47 -0.013502  0.002905 -0.019154 -0.007766  6.469658e-05
 rawCount49 -0.010084  0.003296 -0.017064 -0.004143  1.993972e-02
 rawCount50 -0.017470  0.004939 -0.026978 -0.007617  4.193635e-03
 rawCount53 -0.014984  0.002692 -0.019947 -0.009396  9.979048e-07
 rawCount54  0.010862  0.003767  0.003319  0.018085  3.213001e-02
 rawCount55 -0.010421  0.002620 -0.015490 -0.005220  8.926823e-04
 rawCount56 -0.006608  0.002261 -0.010867 -0.002003  3.022109e-02
 rawCount58 -0.018916  0.003158 -0.024667 -0.012288  1.132493e-07
 rawCount59 -0.014190  0.002589 -0.018408 -0.008261  1.418989e-06}
 
 
Setting:

results <- IFAA(MicrobData = dataM[, ],
                CovData = dataC[, ],
                linkIDname = "id",
                testCov = c("v1"),
                ctrlCov = c("v2", "v3"),
                paraJobs = 4,
                refTaxa = glue::glue("rawCount{1:40}"),
                seed = 1,
                bootB = 100,
                sequentialRun=F)



results$sig_results
results$full_results
results$analysisResults$finalizedBootRefTaxon
results$analysisResults$allRefTaxNam
results$covriateNames

 
 
